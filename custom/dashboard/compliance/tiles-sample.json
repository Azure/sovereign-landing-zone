[
  {
    "position": {
      "x": 0,
      "y": 41,
      "colSpan": 16,
      "rowSpan": 4
    },
    "metadata": {
      "inputs": [
        {
          "name": "isShared",
          "isOptional": true
        },
        {
          "name": "queryId",
          "isOptional": true
        },
        {
          "name": "partTitle",
          "value": "Custom query 1 - compliance percentage by policy group",
          "isOptional": true
        },
        {
          "name": "query",
          "value": "PolicyResources| where type == 'microsoft.policyinsights/policystates' and tolower(properties.policyAssignmentScope) has '/providers/Microsoft.Management/managementGroups/mcfs'| extend policyDefinitionId = tolower(properties.policyDefinitionId), policyGroups = properties.policyDefinitionGroupNames, policySetDefinitionName = tolower(properties.policySetDefinitionName)| mv-expand parsed_policy_groups = policyGroups| where parsed_policy_groups hasprefix 'so.'| extend parsed_policy_groups = trim('so.',tostring(parsed_policy_groups))| project properties, policyDefinitionId, parsed_policy_groups| extend complianceState = tostring(properties.complianceState), resourceId = tolower(properties.resourceId), stateWeight = tolong(properties.stateWeight)| summarize max(stateWeight) by resourceId, tostring(parsed_policy_groups)| summarize counts = count() by tostring(parsed_policy_groups), max_stateWeight| summarize nonCompliantCount = sumif(counts, max_stateWeight == 300), compliantCount = sumif(counts, max_stateWeight == 200), conflictCount = sumif(counts, max_stateWeight == 100), exemptCount = sumif(counts, max_stateWeight == 50) by tostring(parsed_policy_groups)| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)| extend totalCompliantResources = todouble(compliantCount + exemptCount)| extend compliancePercentage = iff(totalResources == 0 or (totalCompliantResources == 0 and nonCompliantCount == 0), todouble(100), 100 * totalCompliantResources / totalResources)| project toupper(parsed_policy_groups), compliancePercentageEx = toint(round(compliancePercentage, 1))| order by compliancePercentageEx asc",
          "isOptional": true
        },
        {
          "name": "chartType",
          "value": 1,
          "isOptional": true
        },
        {
          "name": "queryScope",
          "value": {
            "scope": 0,
            "values": []
          },
          "isOptional": true
        }
      ],
      "type": "Extension/HubsExtension/PartType/ArgQueryChartTile",
      "settings": {},
      "partHeader": {
        "title": "Custom Query 1 - per policy group",
        "subtitle": "Hover over bar to see policy group name and its compliance percentage"
      }
    }
  }
]
