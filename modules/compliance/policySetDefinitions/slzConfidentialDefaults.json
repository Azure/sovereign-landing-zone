{
  "properties": {
    "displayName": "SLZ Confidential Policies",
    "policyType": "Custom",
    "description": "Policies to enforce confidential computing",
    "metadata": {
      "category": "Regulatory Compliance",
      "version": "0.3.0"
    },
    "parameters": {
      "effect": {
        "type": "string",
        "metadata": {
          "displayName": "Effect",
          "description": "Execution of the policy"
        },
        "allowedValues": ["Audit", "Deny", "Disabled", "AuditIfNotExists"],
        "defaultValue": "Deny"
      },
      "listOfAllowedLocations": {
        "type": "array",
        "defaultValue": [],
        "allowedValues": [
          "asia",
          "asiapacific",
          "australia",
          "australiacentral",
          "australiacentral2",
          "australiaeast",
          "australiasoutheast",
          "brazil",
          "brazilsouth",
          "brazilsoutheast",
          "canada",
          "canadacentral",
          "canadaeast",
          "centralindia",
          "centralus",
          "centraluseuap",
          "centralusstage",
          "eastasia",
          "eastasiastage",
          "eastus",
          "eastus2",
          "eastus2euap",
          "eastus2stage",
          "eastusstage",
          "eastusstg",
          "europe",
          "france",
          "francecentral",
          "francesouth",
          "germany",
          "germanynorth",
          "germanywestcentral",
          "global",
          "india",
          "japan",
          "japaneast",
          "japanwest",
          "jioindiacentral",
          "jioindiawest",
          "korea",
          "koreacentral",
          "koreasouth",
          "northcentralus",
          "northcentralusstage",
          "northeurope",
          "norway",
          "norwayeast",
          "norwaywest",
          "qatarcentral",
          "singapore",
          "southafrica",
          "southafricanorth",
          "southafricawest",
          "southcentralus",
          "southcentralusstage",
          "southcentralusstg",
          "southeastasia",
          "southeastasiastage",
          "southindia",
          "swedencentral",
          "switzerland",
          "switzerlandnorth",
          "switzerlandwest",
          "uae",
          "uaecentral",
          "uaenorth",
          "uk",
          "uksouth",
          "ukwest",
          "unitedstates",
          "unitedstateseuap",
          "westcentralus",
          "westeurope",
          "westindia",
          "westus",
          "westus2",
          "westus2stage",
          "westus3",
          "westusstage"
        ],
        "metadata": {
          "displayName": "Allowed locations",
          "description": "The list of locations that can be specified when deploying resources",
          "strongType": "location"
        }
      },
      "Resource Types": {
        "type": "array",
        "metadata": {
          "displayName": "Resource Types",
          "description": null,
          "strongType": "resourceTypes"
        },
        "defaultValue": []
      },
      "Virtual Machine SKUs": {
        "type": "array",
        "metadata": {
          "displayName": "Virtual Machine SKUs",
          "strongType": "vmSKUs"
        },
        "defaultValue": []
      }
    },
    "policyDefinitions": [
      {
        "policyDefinitionReferenceId": "AllowedLocationsForResourceGroups",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988",
        "parameters": {
          "listOfAllowedLocations": {
            "value": "[[parameters('listOfAllowedLocations')]"
          }
        },
        "groupNames": ["dashboard-Data Residency"]
      },
      {
        "policyDefinitionReferenceId": "AllowedLocations",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c",
        "parameters": {
          "listOfAllowedLocations": {
            "value": "[[parameters('listOfAllowedLocations')]"
          }
        },
        "groupNames": ["dashboard-Data Residency"]
      },
      {
        "policyDefinitionReferenceId": "Azure Cosmos DB allowed locations_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0473574d-2d43-4217-aefe-941fcdf7e684",
        "parameters": {
          "listOfAllowedLocations": {
            "value": "[[parameters('listOfAllowedLocations')]"
          }
        },
        "groupNames": ["dashboard-Data Residency"]
      },
      {
        "policyDefinitionReferenceId": "[Preview]: Azure Recovery Services vaults should use customer-managed keys for encrypting backup dat_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2e94d99a-8a36-4563-bc77-810d8893b671",
        "parameters": {
          "effect": {
            "value": "[[parameters('effect')]"
          }
        },
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "Managed disks should be double encrypted with both platform-managed and customer-managed keys_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ca91455f-eace-4f96-be59-e6e2c35b4816",
        "parameters": {
          "effect": {
            "value": "[[parameters('effect')]"
          }
        },
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "Both operating systems and data disks in Azure Kubernetes Service clusters should be encrypted by cu_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7d7be79c-23ba-4033-84dd-45e2a5ccdd67",
        "parameters": {
          "effect": {
            "value": "[[parameters('effect')]"
          }
        },
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "SQL servers should use customer-managed keys to encrypt data at rest_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a370ff3-6cab-4e85-8995-295fd854c5b8",
        "parameters": {
          "effect": {
            "value": "[[parameters('effect')]"
          }
        },
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "PostgreSQL servers should use customer-managed keys to encrypt data at rest_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274",
        "parameters": {},
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "MySQL servers should use customer-managed keys to encrypt data at rest_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833",
        "parameters": {},
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "SQL managed instances should use customer-managed keys to encrypt data at rest_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac01ad65-10e5-46df-bdd9-6b0cad13e1d2",
        "parameters": {
          "effect": {
            "value": "[[parameters('effect')]"
          }
        },
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "Storage accounts should use customer-managed key for encryption_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25",
        "parameters": {},
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "Table Storage should use customer-managed key for encryption_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7c322315-e26d-4174-a99e-f49d351b4688",
        "parameters": {
          "effect": {
            "value": "[[parameters('effect')]"
          }
        },
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "HPC Cache accounts should use customer-managed key for encryption_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/970f84d8-71b6-4091-9979-ace7e3fb6dbb",
        "parameters": {
          "effect": {
            "value": "[[parameters('effect')]"
          }
        },
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "Storage account encryption scopes should use customer-managed keys to encrypt data at rest_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b5ec538c-daa0-4006-8596-35468b9148e8",
        "parameters": {
          "effect": {
            "value": "[[parameters('effect')]"
          }
        },
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "Queue Storage should use customer-managed key for encryption_1",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f0e5abd0-2554-4736-b7c0-4ffef23475ef",
        "parameters": {
          "effect": {
            "value": "[[parameters('effect')]"
          }
        },
        "groupNames": ["dashboard-Key Management"]
      },
      {
        "policyDefinitionReferenceId": "Allowed resource types",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a08ec900-254a-4555-9bf5-e42af04b5c5c",
        "parameters": {
          "listOfResourceTypesAllowed": {
            "value": "[[parameters('Resource Types')]"
          }
        },
        "groupNames": ["dashboard-Confidential Computing"]
      },
      {
        "policyDefinitionReferenceId": "Allowed virtual machine size SKUs",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cccc23c7-8427-4f53-ad12-b6a63eb452b3",
        "parameters": {
          "listOfAllowedSKUs": {
            "value": "[[parameters('Virtual Machine SKUs')]"
          }
        },
        "groupNames": ["dashboard-Confidential Computing"]
      }
    ],
    "policyDefinitionGroups": [
      {
        "name": "dashboard-Data Residency",
        "category": "Residency",
        "description": "Control where regional Azure resources are deployed and used"
      },
      {
        "name": "dashboard-Key Management",
        "category": "Encryption",
        "description": "Customer should have control of keys used for encryption and decryption while also using best practices for key strength and security."
      },
      {
        "name": "dashboard-Confidential Computing",
        "category": "Encryption",
        "description": "Confidential workloads should be protected from unauthorized access while data is in use."
      }
    ]
  },
  "id": "${varTargetManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/SlzConfidentialPolicies",
  "type": "Microsoft.Authorization/policySetDefinitions",
  "name": "SlzConfidentialPolicies"
}
