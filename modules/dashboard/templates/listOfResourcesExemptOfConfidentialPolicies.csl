PolicyResources
| where type == 'microsoft.policyinsights/policystates' and tostring(properties.complianceState)  == "Exempt" and tolower(properties.policyAssignmentScope) has  '/providers/Microsoft.Management/managementGroups/RootPrefix_PLACEHOLDER'  
| extend  policyDefinitionId = tolower(properties.policyDefinitionId),complianceState = tostring(properties.complianceState), resourceId = tolower(properties.resourceId), resourceType = tostring(properties.resourceType), policySetDefinitionName = tostring(properties.policySetDefinitionName),subscriptionId = tostring(properties.subscriptionId), policyGroups = tolower(properties.policyDefinitionGroupNames)
| mv-expand parsed_policy_groups = parse_json(policyGroups)
| where tostring(parsed_policy_groups) in ("dashboard-storage security", "dashboard-transport security", "dashboard-confidential computing","dashboard-key management")
| join kind=leftouter (
   resources
   | project resourceId=tolower(id), resourceName=name, resourceGroup
  ) on resourceId
| join kind=inner (
    resourcecontainers
    | where type == 'microsoft.resources/subscriptions'
    | project subscriptionId, subscriptionName = name
  ) on subscriptionId
| project ['Compliance State']=complianceState, ['Policy initiative']=policySetDefinitionName, ['Policy definition id']=policyDefinitionId, ['Resource type']=resourceType, ['Resource name']=resourceName, ['Subscription id']=subscriptionId, ['Policy group']=tostring(parsed_policy_groups)